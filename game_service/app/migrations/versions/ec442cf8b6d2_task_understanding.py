"""task understanding

Revision ID: ec442cf8b6d2
Revises: 
Create Date: 2024-01-04 22:03:49.026921

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ec442cf8b6d2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('field_player_id_fkey', 'field', type_='foreignkey')
    op.drop_column('field', 'player_id')
    op.add_column('game', sa.Column('player_id', sa.Integer(), nullable=True))
    op.add_column('game', sa.Column('player_moves', sa.Integer(), nullable=True))
    op.add_column('game', sa.Column('dt_start', sa.TIMESTAMP(), nullable=True))
    op.drop_constraint('game_player1_id_fkey', 'game', type_='foreignkey')
    op.drop_constraint('game_player2_id_fkey', 'game', type_='foreignkey')
    op.create_foreign_key(None, 'game', 'player', ['player_id'], ['id'])
    op.drop_column('game', 'player2_remaining_moves')
    op.drop_column('game', 'player1_remaining_moves')
    op.drop_column('game', 'player1_used_moves')
    op.drop_column('game', 'datetime_start')
    op.drop_column('game', 'player1_id')
    op.drop_column('game', 'datetime_end')
    op.drop_column('game', 'player2_used_moves')
    op.drop_column('game', 'player2_id')
    op.add_column('prize', sa.Column('dt_won', sa.TIMESTAMP(), nullable=True))
    op.drop_column('prize', 'datetime')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('prize', sa.Column('datetime', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('prize', 'dt_won')
    op.add_column('game', sa.Column('player2_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('player2_used_moves', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('datetime_end', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('player1_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('datetime_start', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('player1_used_moves', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('player1_remaining_moves', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('game', sa.Column('player2_remaining_moves', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'game', type_='foreignkey')
    op.create_foreign_key('game_player2_id_fkey', 'game', 'player', ['player2_id'], ['id'])
    op.create_foreign_key('game_player1_id_fkey', 'game', 'player', ['player1_id'], ['id'])
    op.drop_column('game', 'dt_start')
    op.drop_column('game', 'player_moves')
    op.drop_column('game', 'player_id')
    op.add_column('field', sa.Column('player_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('field_player_id_fkey', 'field', 'player', ['player_id'], ['id'])
    # ### end Alembic commands ###
